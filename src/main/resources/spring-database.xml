<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="   
          http://www.springframework.org/schema/beans   
          http://www.springframework.org/schema/beans/spring-beans.xsd   
          http://www.springframework.org/schema/tx   
          http://www.springframework.org/schema/tx/spring-tx.xsd  
          http://www.springframework.org/schema/context   
          http://www.springframework.org/schema/context/spring-context.xsd   
          http://www.springframework.org/schema/aop   
          http://www.springframework.org/schema/aop/spring-aop.xsd" >
    		 <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		 		<property name="locations">
			    	<list>  
		              <value>classpath:database.properties</value>  
		            </list> 
		 		</property>
		 	</bean> 

	 <!-- 配置数据源 使用的是Druid数据源 -->  
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
        init-method="init" destroy-method="close">  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="0" />  
        <!-- 连接池最大使用连接数量 -->  
        <property name="maxActive" value="20" />  
          
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="0" />  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="60000" />  
        <property name="poolPreparedStatements" value="true" />  
        <property name="maxPoolPreparedStatementPerConnectionSize"  
            value="33" />  
        <!-- 用来检测有效sql -->  
        <property name="validationQuery" value="${validationQuery}" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <property name="testWhileIdle" value="true" />  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="25200000" />  
        <!-- 打开removeAbandoned功能 -->  
        <property name="removeAbandoned" value="true" />  
        <!-- 1800秒，也就是30分钟 -->  
        <property name="removeAbandonedTimeout" value="1800" />  
        <!-- 关闭abanded连接时输出错误日志 -->  
        <property name="logAbandoned" value="true" />  
        <!-- 监控数据库 -->  
        <property name="filters" value="mergeStat" />  
    </bean>  
  
	<!-- 事物控制 start-->
 	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >  
   		<property name="dataSource" ref="dataSource"></property>  
	</bean>  
	<tx:advice id="dataAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	      <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	      <tx:method name="del*" propagation="REQUIRED"/>
	      <tx:method name="update*" propagation="REQUIRED"/>
	      <tx:method name="add*" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
	
	<aop:config>
	<aop:pointcut id="allServiceMethod" expression="execution(* com.hy.loong.service.impl.*.*(..))"/>
	<aop:advisor pointcut-ref="allServiceMethod" advice-ref="dataAdvice" />
	</aop:config>
	
	<!-- 后台权限管理实务-->
<!-- 	<aop:config>
	<aop:pointcut id="adminServiceMethod" expression="execution(* com.hy.loong.admin.service.impl.*.*(..))"/>
	<aop:advisor pointcut-ref="adminServiceMethod" advice-ref="dataAdvice" />
	</aop:config> -->
	<!-- 事物控制 end -->
	
	
	<!-- 2.配置Mybatis的SqlSession的工厂 SqlSessionFactory 属性有dataSource -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		 <property name="transactionFactory">
		    <bean class="org.mybatis.spring.transaction.SpringManagedTransactionFactory" />
		  </property>  
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	<bean id="sqlSessionTemplateSimple" class="org.mybatis.spring.SqlSessionTemplate">     
		<constructor-arg index="0" ref="sqlSessionFactory" />  
		<!--更新采用单个模式 -->  
		<constructor-arg index="1" value="SIMPLE"/>  
	</bean>
	
	<!-- 建立一个公有类让其余的去继承 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hy.loong"/>
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateSimple" />  
        <property name="markerInterface" value="com.hy.loong.dao.SqlMapper"/>
    </bean>
</beans>